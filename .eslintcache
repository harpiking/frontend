[{"C:\\Users\\ROI\\desktop\\my-app\\src\\index.js":"1","C:\\Users\\ROI\\desktop\\my-app\\src\\App.js":"2","C:\\Users\\ROI\\desktop\\my-app\\src\\component\\list.js":"3","C:\\Users\\ROI\\desktop\\my-app\\src\\component\\loading.js":"4","C:\\Users\\ROI\\desktop\\my-app\\src\\component\\paginate.js":"5"},{"size":367,"mtime":1610717571625,"results":"6","hashOfConfig":"7"},{"size":812,"mtime":1611047024234,"results":"8","hashOfConfig":"7"},{"size":3774,"mtime":1611049732057,"results":"9","hashOfConfig":"7"},{"size":364,"mtime":1610748181445,"results":"10","hashOfConfig":"7"},{"size":3918,"mtime":1611044702338,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"st7dvy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\ROI\\desktop\\my-app\\src\\index.js",[],["24","25"],"C:\\Users\\ROI\\desktop\\my-app\\src\\App.js",[],"C:\\Users\\ROI\\desktop\\my-app\\src\\component\\list.js",["26"],"C:\\Users\\ROI\\desktop\\my-app\\src\\component\\loading.js",[],"C:\\Users\\ROI\\desktop\\my-app\\src\\component\\paginate.js",["27","28","29"],"import React, {Component} from 'react'\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../App.css'\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offset: 0,\r\n            data: [],\r\n            perPage: 10,\r\n            currentPage: 0\r\n        };\r\n        this.handlePageClick = this\r\n            .handlePageClick\r\n            .bind(this);\r\n    }\r\n  async  receivedData() {\r\n                const data = await data.records.profiles;\r\n                const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n                const postData = data.map((items, index) => {\r\n                  console.log(data.records.profiles)\r\n                    return (\r\n                      <React.Fragment>\r\n                      <div key={items.MacAddress} className='list'>\r\n                      <div>\r\n                      <h3 className=\"cNo\"><mark>Card Number: {index + 1}</mark></h3>\r\n                        <h2 className='repo-text'> <strong>First Name:</strong> {items.FirstName}  </h2>\r\n                        <h2 className='repo-text'> <strong>Last Name:</strong> {items.LastName} </h2>\r\n                         <h2 className='repo-text'> <strong>UserName:</strong> {items.UserName} </h2>\r\n                        <h2 className='repo-text'> <strong>Gender:</strong> {items.Gender} </h2>\r\n                        <h2 className='repo-text'> <strong>Phone Number:</strong> {items.PhoneNumber} </h2>\r\n                        <h2 className='repo-text'> <strong>Payment Method:</strong> {items.PaymentMethod} </h2>\r\n                         <h2 className='repo-text'> <strong>Credit Card Number:</strong> {items.CreditCardNumber} </h2>\r\n                         <h2 className='repo-text'> <strong>Credit Card Type:</strong> {items.CreditCardType} </h2>\r\n                        <h2 className='repo-text'> <strong>URL:</strong> {items.URL}</h2>\r\n                        <h2 className='repo-text'> <strong>Domain Name:</strong> {items.DomainName} </h2>\r\n                        <h2 className='repo-text'> <strong>Mac Address:</strong> {items.MacAddress} </h2>\r\n                        <h2 className='repo-text'> <strong>Last Login:</strong> {items.LastLogin} </h2>\r\n                        <h2 className='repo-text'> <strong>Latitude:</strong> {items.Latitude} </h2>\r\n                        <h2 className='repo-text'> <strong>Longitude:</strong> {items.Longitude} </h2>\r\n                        </div>\r\n                      </div>\r\n                        </React.Fragment>\r\n                    );\r\n                    this.setState({\r\n                        pageCount: Math.ceil(data.profiles.records.length / this.state.perPage),\r\n\r\n                        postData\r\n                    })\r\n                });\r\n\r\n\r\n    }\r\n  handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * this.state.perPage;\r\n\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n        }, () => {\r\n            this.receivedData()\r\n        });\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.receivedData()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.postData}\r\n                <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":75,"column":38,"nodeType":"36","messageId":"37","endLine":75,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":19,"column":36,"nodeType":"40","messageId":"41","endLine":19,"endColumn":40},{"ruleId":"42","severity":1,"message":"43","line":20,"column":23,"nodeType":"40","messageId":"44","endLine":20,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":46,"column":21,"nodeType":"47","messageId":"48","endLine":50,"endColumn":23},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-use-before-define","'data' was used before it was defined.","Identifier","usedBeforeDefined","no-unused-vars","'slice' is assigned a value but never used.","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","no-global-assign","no-unsafe-negation"]